preproc = "import"

#number = '(?<=-)([[:digit:]]+)'

include "number.lang"

normal = '\\["\'`$]'

#------------------------------------------------------------------------------
# string literals
#   strings in shell scripts are completely different from those in C language.

environment string delim "`" "`" multiline begin
  specialchar = '\\["$`]'
end

environment string delim '\$?"' '"' multiline begin
  specialchar = '\\["$`]'
end

environment string delim '\$\'' '\'' multiline begin
  specialchar = '\\[abeEfnrtv\\\'"]|\\c.|\\U[0-9a-fA-F]{1,8}|\\u[0-9a-fA-F]{1,4}|\\x[0-9a-fA-F]{1,2}|\\[0-7]{1,3}'
end

# single quoted string cannot contain escape characters
string delim '\'' '\'' multiline

#------------------------------------------------------------------------------

(keyword,normal,function) = `(function)([[:blank:]]+)([^;&|<>()"'\`$[:blank:]]+(?=[[:blank:]]*(?:\(\))?))`
function = '([^;&|<>()"\'`$[:blank:]=]+(?=[[:blank:]]*\(\)))'

# avoids, in things such as --bind, that words are highlighted as keywords
normal = '([[:alpha:]]*[-/]+[[:alpha:]]+)+'

keyword = "alias|bg|bind|break|builtin|caller|case|command|compgen",
          "complete|continue|declare|dirs|disown|do|done|elif|else|enable",
          "esac|eval|exec|exit|export|false|fc|fg|fi|for|getopts|hash|help",
          "history|if|in|jobs|let|local|logout|popd|printf|pushd|read",
          "readonly|return|select|set|shift|shopt|source|suspend|test|then",
          "times|trap|true|type|typeset|umask|unalias|unset|until|wait|while"

# it is considered a variable if there's a =, which is discarded anyway
variable = '([[:alpha:]]|_)[[:word:]]*(?==)'
(symbol,variable,symbol) = `(\$\{)([^[:blank:]{}]+)(\})`
variable = '\$\(([^[:blank:]]+)\)'
(symbol,variable) = `(\$)((?:[[:alpha:]]|_)[[:word:]]*|[-*@#?$!0]|[1-9][0-9]*)`

# notice that - is not a symbol since it can be used in command line parameters
symbol = "~","!","%","^","*","(",")","+","=","[",
        "]","\\",":",";",",",".","/","?","&","<",">","\|","%%"
symbol = '(##){2}(?!#)'

include "script_comment.lang"

